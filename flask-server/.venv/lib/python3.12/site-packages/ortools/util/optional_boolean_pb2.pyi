"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2010-2024 Google LLC
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OptionalBoolean:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OptionalBooleanEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OptionalBoolean.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BOOL_UNSPECIFIED: _OptionalBoolean.ValueType  # 0
    BOOL_FALSE: _OptionalBoolean.ValueType  # 2
    BOOL_TRUE: _OptionalBoolean.ValueType  # 3

class OptionalBoolean(_OptionalBoolean, metaclass=_OptionalBooleanEnumTypeWrapper):
    """A "three-way" boolean: unspecified, false or true.

    We don't use the value of 1 to increase the chance to catch bugs: eg. in
    python, a user may set a proto field of this type enum to a boolean value
    without type checks, if they set it to True, the proto validity code will
    catch it (because it'll be cast to 1, which is an invalid enum value).
    Note that if the user sets if to False (i.e. 0), it will be caught by the
    routing library's parameter validity check too.
    """

BOOL_UNSPECIFIED: OptionalBoolean.ValueType  # 0
BOOL_FALSE: OptionalBoolean.ValueType  # 2
BOOL_TRUE: OptionalBoolean.ValueType  # 3
global___OptionalBoolean = OptionalBoolean
